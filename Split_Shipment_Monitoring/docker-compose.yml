version: '3.8'

services:
  # Database
  postgres:
    image: postgres:13
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  # Redis for Airflow and API caching
  redis:
    image: redis:6.2
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Airflow database initialization
  airflow-init:
    image: apache/airflow:2.5.1
    container_name: airflow-init
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - _AIRFLOW_DB_UPGRADE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
    command: version
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    entrypoint: >
      /bin/bash -c "
        airflow db init &&
        airflow users create -r Admin -u admin -p admin -e admin@example.com -f Admin -l User &&
        exit 0
      "

  # Airflow components
  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    image: apache/airflow:2.5.1
    container_name: airflow-webserver
    restart: always
    depends_on:
      - postgres
      - redis
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=true
      - AIRFLOW_VAR_manh_base_url=${MANH_BASE_URL}
      - AIRFLOW_VAR_manh_client_id=${MANH_CLIENT_ID}
      - AIRFLOW_VAR_manh_client_secret=${MANH_CLIENT_SECRET}
      - AIRFLOW_VAR_organization_list=${ORGANIZATION_LIST}
      - AIRFLOW_VAR_s3_data_bucket=${S3_DATA_BUCKET}
      - AIRFLOW_VAR_slack_webhook_url=${SLACK_WEBHOOK_URL}
      - AIRFLOW_VAR_alert_email_recipients=${ALERT_EMAIL_RECIPIENTS}
      - AIRFLOW_VAR_dashboard_url=${DASHBOARD_URL}
      - AIRFLOW_CONN_redis_default=redis://:@redis:6379/0
      - AIRFLOW_CONN_aws_default=aws://${AWS_ACCESS_KEY_ID}:${AWS_SECRET_ACCESS_KEY}@?region_name=${AWS_REGION}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./requirements-airflow.txt:/opt/airflow/requirements-airflow.txt
    ports:
      - "8080:8080"
    command: bash -c "pip install --no-cache-dir -r /opt/airflow/requirements-airflow.txt && airflow webserver"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    image: apache/airflow:2.5.1
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
      - AIRFLOW_VAR_manh_base_url=${MANH_BASE_URL}
      - AIRFLOW_VAR_manh_client_id=${MANH_CLIENT_ID}
      - AIRFLOW_VAR_manh_client_secret=${MANH_CLIENT_SECRET}
      - AIRFLOW_VAR_organization_list=${ORGANIZATION_LIST}
      - AIRFLOW_VAR_s3_data_bucket=${S3_DATA_BUCKET}
      - AIRFLOW_VAR_slack_webhook_url=${SLACK_WEBHOOK_URL}
      - AIRFLOW_VAR_alert_email_recipients=${ALERT_EMAIL_RECIPIENTS}
      - AIRFLOW_VAR_dashboard_url=${DASHBOARD_URL}
      - AIRFLOW_CONN_redis_default=redis://:@redis:6379/0
      - AIRFLOW_CONN_aws_default=aws://${AWS_ACCESS_KEY_ID}:${AWS_SECRET_ACCESS_KEY}@?region_name=${AWS_REGION}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
    command: bash -c "pip install --no-cache-dir -r /opt/airflow/requirements-airflow.txt && airflow scheduler"

  airflow-worker:
    image: apache/airflow:2.5.1
    container_name: airflow-worker
    restart: always
    depends_on:
      - airflow-scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
      - AIRFLOW_VAR_manh_base_url=${MANH_BASE_URL}
      - AIRFLOW_VAR_manh_client_id=${MANH_CLIENT_ID}
      - AIRFLOW_VAR_manh_client_secret=${MANH_CLIENT_SECRET}
      - AIRFLOW_VAR_organization_list=${ORGANIZATION_LIST}
      - AIRFLOW_VAR_s3_data_bucket=${S3_DATA_BUCKET}
      - AIRFLOW_VAR_slack_webhook_url=${SLACK_WEBHOOK_URL}
      - AIRFLOW_VAR_alert_email_recipients=${ALERT_EMAIL_RECIPIENTS}
      - AIRFLOW_VAR_dashboard_url=${DASHBOARD_URL}
      - AIRFLOW_CONN_redis_default=redis://:@redis:6379/0
      - AIRFLOW_CONN_aws_default=aws://${AWS_ACCESS_KEY_ID}:${AWS_SECRET_ACCESS_KEY}@?region_name=${AWS_REGION}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: celery worker

  # API Service
  split-shipment-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: split-shipment-api
    restart: always
    depends_on:
      - redis
    environment:
      - S3_DATA_BUCKET=${S3_DATA_BUCKET}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_USERNAME=${API_USERNAME}
      - API_PASSWORD_HASH=${API_PASSWORD_HASH}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
    ports:
      - "5000:5000"

  # Dashboard Frontend
  dashboard-frontend:
    image: nginx:1.21
    container_name: dashboard-frontend
    restart: always
    volumes:
      - ./dashboard:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - split-shipment-api

volumes:
  postgres-data:
  redis-data: