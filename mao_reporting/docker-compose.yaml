version: '3'

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.7.2-python3.9
  environment:
    &airflow-common-env
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: sqlite:////airflow/airflow.db
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    # Email configuration
    AIRFLOW__SMTP__SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
    AIRFLOW__SMTP__SMTP_PORT: ${SMTP_PORT:-587}
    AIRFLOW__SMTP__SMTP_USER: ${SMTP_USER:-your-email@gmail.com}
    AIRFLOW__SMTP__SMTP_PASSWORD: ${SMTP_PASSWORD:-your-password}
    AIRFLOW__SMTP__SMTP_MAIL_FROM: ${SMTP_MAIL_FROM:-your-email@gmail.com}
    AIRFLOW__SMTP__SMTP_STARTTLS: 'True'
    AIRFLOW__SMTP__SMTP_SSL: 'False'
    # API connection
    ORDER_API_BASE_URL: ${ORDER_API_BASE_URL:-https://api.example.com}
    ORDER_API_CLIENT_ID: ${ORDER_API_CLIENT_ID:-default_client_id}
    ORDER_API_CLIENT_SECRET: ${ORDER_API_CLIENT_SECRET:-default_client_secret}
    # MongoDB connection
    MONGODB_CONNECTION_STRING: mongodb://mongodb:27017/
    MONGODB_DATABASE: order_reports
    MONGODB_COLLECTION: api_responses
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./config:/opt/airflow/config
    - ./plugins:/opt/airflow/plugins
    - ./utils:/opt/airflow/utils
    - ./tmp:/tmp
    - ./airflow:/airflow
  depends_on:
    - mongodb
  
services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=order_reports
    restart: always
    
  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: >
      -c "
        pip install pymongo pandas matplotlib reportlab requests
        # Make sure we DON'T upgrade airflow itself since it causes compatibility issues
        pip install 'apache-airflow-providers-openlineage>=1.8.0' --no-deps
        mkdir -p /opt/airflow/logs /opt/airflow/dags /opt/airflow/plugins /opt/airflow/config /opt/airflow/utils /tmp /airflow
        airflow db init
        airflow db upgrade
        if ! airflow users list | grep -q 'admin'; then
          airflow users create -r Admin -u admin -p admin -e admin@example.com -f Admin -l User
        fi
        exit 0 
      "
    restart: on-failure

  airflow-webserver:
    <<: *airflow-common
    depends_on:
      - airflow-init
      - mongodb
    command: >
      bash -c "
        pip install pymongo pandas matplotlib reportlab requests
        # Make sure we DON'T upgrade airflow itself
        pip install 'apache-airflow-providers-openlineage>=1.8.0' --no-deps
        exec airflow webserver
      "
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    depends_on:
      - airflow-init
      - mongodb
    command: >
      bash -c "
        pip install pymongo pandas matplotlib reportlab requests
        # Make sure we DON'T upgrade airflow itself
        pip install 'apache-airflow-providers-openlineage>=1.8.0' --no-deps
        exec airflow scheduler
      "
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    
  # Optional MongoDB admin interface
  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongodb
    
volumes:
  mongodb_data: